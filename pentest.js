// Escape user input to prevent XSS
function escapeHTML(str) {
    return str.replace(/[&<>"']/g, function (match) {
        const escape = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#39;'
        };
        return escape[match];
    });
}

// Secure SQL Injection simulation
function secureSQLInjection() {
    const username = escapeHTML(document.getElementById('username').value);
    const password = escapeHTML(document.getElementById('password').value);
    
    if (!username || !password) {
        document.getElementById('sqlResult').innerText = 'Error: Both fields are required.';
        return;
    }

    // Simulated query with input escaped (more secure)
    const query = `SELECT * FROM users WHERE username = ? AND password = ?`;
    document.getElementById('sqlResult').innerText = `SQL Query (Prepared Statement): ${query}`;
}

// Secure XSS handling by escaping input
function secureXSS() {
    const input = document.getElementById('xssInput').value;
    const sanitizedInput = escapeHTML(input);
    document.getElementById('xssOutput').innerHTML = sanitizedInput;
}

// Secure XML Injection handling
function secureXMLInjection() {
    const xmlData = escapeHTML(document.getElementById('xmlData').value);
    
    // Basic XML validation (not allowing special characters)
    if (!xmlData || /[<>]/.test(xmlData)) {
        document.getElementById('xmlResult').innerText = 'Invalid XML data. XML tags are not allowed.';
        return;
    }
    
    document.getElementById('xmlResult').innerText = `Processed XML Data: ${xmlData}`;
}

// Secure CSRF simulation with token validation
function secureCSRF() {
    const amount = document.getElementById('amount').value;
    const csrfToken = "valid-csrf-token-12345"; // In a real app, this should be dynamically generated
    
    // Simulating CSRF protection by checking token
    if (csrfToken === "valid-csrf-token-12345") {
        document.getElementById('csrfResult').innerText = `Transfer of $${amount} completed with CSRF protection.`;
    } else {
        document.getElementById('csrfResult').innerText = 'CSRF token validation failed!';
    }
}

// Secure Path Traversal by sanitizing input
function securePathTraversal() {
    const file = escapeHTML(document.getElementById('file').value);
    
    // Prevent path traversal by blocking "../" or "/" in filenames
    if (file.includes("..") || file.includes("/")) {
        document.getElementById('pathResult').innerText = 'Error: Path traversal detected. Access denied.';
        return;
    }

    document.getElementById('pathResult').innerText = `Accessing file: /safe_directory/${file}`;
}
